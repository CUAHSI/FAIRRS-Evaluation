{
  "subject": "ChannelProfiler#3002##",
  "data": [
    {
      "property": "Citations",
      "dataitem": [
        {
          "type": 2,
          "item": "178"
        }
      ]
    },
    {
      "property": "City",
      "dataitem": [
        {
          "type": 2,
          "item": "Boulder"
        }
      ]
    },
    {
      "property": "CodeReviewed",
      "dataitem": [
        {
          "type": 2,
          "item": "1"
        }
      ]
    },
    {
      "property": "Code_optimized",
      "dataitem": [
        {
          "type": 2,
          "item": "Single Processor"
        }
      ]
    },
    {
      "property": "Country",
      "dataitem": [
        {
          "type": 2,
          "item": "United States"
        }
      ]
    },
    {
      "property": "Describe_input_parameters_model",
      "dataitem": [
        {
          "type": 2,
          "item": "grid : Landlab Model Grid instance, required<br><br>\n\nchannel_definition_field : field name as string<br>\nName of field used to identify the outlet and headwater nodes of the channel network. Default is \"drainage_area\".\n\nminimum_outlet_threshold : float, optional<br>\nMinimum value of the *channel_definition_field* to define a watershed outlet. Default is 0.\n\nminimum_channel_threshold : float, optional<br>\nValue to use for the minimum drainage area associated with a plotted channel segment. Default values 0.\n\nnumber_of_watersheds : int, optional<br>\nTotal number of watersheds to plot. Default value is 1. If value is greater than 1 and outlet_nodes is not specified, then the number_of_watersheds largest watersheds is based on the drainage area at the model grid boundary. If given as None, then all grid cells on the domain boundary with a stopping field (typically drainage area) greater than the minimum_outlet_threshold in area are used.\n\nmain_channel_only : Boolean, optional<br>\nFlag to determine if only the main channel should be plotted, or if all stream segments with drainage area less than threshold should be plotted. Default value is True.\n\noutlet_nodes : length number_of_watersheds iterable, optional<br>\nLength number_of_watersheds iterable containing the node IDs of nodes to start the channel profiles from. If not provided, the default is the number_of_watersheds node IDs on the model grid boundary with the largest terminal drainage area.\n\ncmap : str<br>\nA valid matplotlib cmap string. Default is \"viridis\"."
        }
      ]
    },
    {
      "property": "Describe_output_parameters_model",
      "dataitem": [
        {
          "type": 2,
          "item": "\"drainage_area\": \n{\n\"dtype\": float,\n\"intent\": \"in\",\n\"optional\": True,\n\"units\": \"m**2\",\n\"mapping\": \"node\",\n\"doc\": \"Upstream accumulated surface area contributing to the node's discharge\",\n},\n        \n\"flow__link_to_receiver_node\": \n{\n\"dtype\": int,\n\"intent\": \"in\",\n\"optional\": False,\n\"units\": \"-\",\n\"mapping\": \"node\",\n\"doc\": \"ID of link downstream of each node, which carries the discharge\",\n},\n        \n\"flow__receiver_node\": \n{\n\"dtype\": int,\n\"intent\": \"in\",\n\"optional\": False,\n\"units\": \"-\",\n\"mapping\": \"node\",\n\"doc\": \"Node array of receivers (node that receives flow from current node)\",\n}"
        }
      ]
    },
    {
      "property": "Development_still_active",
      "dataitem": [
        {
          "type": 2,
          "item": "No"
        }
      ]
    },
    {
      "property": "Email_address",
      "dataitem": [
        {
          "type": 5,
          "item": "mailto:katherine.barnhart@colorado.edu"
        }
      ]
    },
    {
      "property": "End_year_development",
      "dataitem": [
        {
          "type": 1,
          "item": "2020"
        }
      ]
    },
    {
      "property": "Extended_model_description",
      "dataitem": [
        {
          "type": 2,
          "item": "In order to extract channel networks, the flow connectivity across the grid must already be identified. This is typically done with the FlowAccumulator component. However, this component does not require that the FlowAccumulator was used. Instead it expects that the following at-node grid fields will be present:<br>\n'flow__receiver_node'<br>\n'flow__link_to_receiver_node'<br>\nThe ChannelProfiler can work on grids that have used route-to-one or route-to-multiple flow directing."
        }
      ]
    },
    {
      "property": "First_name",
      "dataitem": [
        {
          "type": 2,
          "item": "Katy"
        }
      ]
    },
    {
      "property": "H-index",
      "dataitem": [
        {
          "type": 1,
          "item": "1"
        }
      ]
    },
    {
      "property": "Input_format_model",
      "dataitem": [
        {
          "type": 2,
          "item": "ASCII"
        }
      ]
    },
    {
      "property": "Last_name",
      "dataitem": [
        {
          "type": 2,
          "item": "Barnhart"
        }
      ]
    },
    {
      "property": "M-quotient",
      "dataitem": [
        {
          "type": 1,
          "item": "0.11"
        }
      ]
    },
    {
      "property": "Manual_model_available",
      "dataitem": [
        {
          "type": 2,
          "item": "No"
        }
      ]
    },
    {
      "property": "ModelDomain",
      "dataitem": [
        {
          "type": 2,
          "item": "Terrestrial"
        }
      ]
    },
    {
      "property": "ModelFramework",
      "dataitem": [
        {
          "type": 2,
          "item": "LandLab"
        }
      ]
    },
    {
      "property": "Model_availability",
      "dataitem": [
        {
          "type": 2,
          "item": "As code"
        }
      ]
    },
    {
      "property": "Model_forum",
      "dataitem": [
        {
          "type": 2,
          "item": "https://github.com/landlab/landlab/issues"
        }
      ]
    },
    {
      "property": "Model_keywords",
      "dataitem": [
        {
          "type": 2,
          "item": "channel"
        },
        {
          "type": 2,
          "item": "profile"
        }
      ]
    },
    {
      "property": "Model_type",
      "dataitem": [
        {
          "type": 2,
          "item": "Single"
        }
      ]
    },
    {
      "property": "Model_website",
      "dataitem": [
        {
          "type": 2,
          "item": "https://landlab.github.io"
        }
      ]
    },
    {
      "property": "Modelautophrases",
      "dataitem": [
        {
          "type": 2,
          "item": "grid"
        },
        {
          "type": 2,
          "item": "extract channel networks"
        },
        {
          "type": 2,
          "item": "channel networks"
        },
        {
          "type": 2,
          "item": "order to extract"
        },
        {
          "type": 2,
          "item": "extract channel"
        },
        {
          "type": 2,
          "item": "flow connectivity"
        },
        {
          "type": 2,
          "item": "flow"
        },
        {
          "type": 2,
          "item": "networks"
        },
        {
          "type": 2,
          "item": "identified"
        },
        {
          "type": 2,
          "item": "receiver"
        },
        {
          "type": 2,
          "item": "order"
        },
        {
          "type": 2,
          "item": "extract"
        },
        {
          "type": 2,
          "item": "channel"
        },
        {
          "type": 2,
          "item": "connectivity"
        },
        {
          "type": 2,
          "item": "profile"
        },
        {
          "type": 2,
          "item": "channelprofiler"
        }
      ]
    },
    {
      "property": "Nr-of-pubs",
      "dataitem": [
        {
          "type": 2,
          "item": "1"
        }
      ]
    },
    {
      "property": "One-line_model_description",
      "dataitem": [
        {
          "type": 2,
          "item": "The ChannelProfiler extracts and plots channel networks from a landlab grid."
        }
      ]
    },
    {
      "property": "Output_format_model",
      "dataitem": [
        {
          "type": 2,
          "item": "ASCII"
        }
      ]
    },
    {
      "property": "Post_processing_software",
      "dataitem": [
        {
          "type": 4,
          "item": "f"
        }
      ]
    },
    {
      "property": "Postal_code",
      "dataitem": [
        {
          "type": 2,
          "item": "80309"
        }
      ]
    },
    {
      "property": "Pre_processing_software",
      "dataitem": [
        {
          "type": 4,
          "item": "f"
        }
      ]
    },
    {
      "property": "Program_license_type",
      "dataitem": [
        {
          "type": 2,
          "item": "BSD or MIT X11"
        }
      ]
    },
    {
      "property": "Programming_language",
      "dataitem": [
        {
          "type": 2,
          "item": "Python"
        }
      ]
    },
    {
      "property": "Source_code_availability",
      "dataitem": [
        {
          "type": 2,
          "item": "Through web repository"
        }
      ]
    },
    {
      "property": "Source_web_address",
      "dataitem": [
        {
          "type": 2,
          "item": "https://github.com/landlab/landlab/tree/master/landlab"
        }
      ]
    },
    {
      "property": "Spatial_dimensions",
      "dataitem": [
        {
          "type": 2,
          "item": "1D"
        }
      ]
    },
    {
      "property": "Spatialscale",
      "dataitem": [
        {
          "type": 2,
          "item": "Landscape-Scale"
        },
        {
          "type": 2,
          "item": "Regional-Scale"
        },
        {
          "type": 2,
          "item": "Watershed-Scale"
        }
      ]
    },
    {
      "property": "Start_year_development",
      "dataitem": [
        {
          "type": 2,
          "item": "2019"
        }
      ]
    },
    {
      "property": "State",
      "dataitem": [
        {
          "type": 2,
          "item": "Colorado"
        }
      ]
    },
    {
      "property": "Supported_platforms",
      "dataitem": [
        {
          "type": 2,
          "item": "Unix"
        },
        {
          "type": 2,
          "item": "Linux"
        },
        {
          "type": 2,
          "item": "Mac OS"
        },
        {
          "type": 2,
          "item": "Windows"
        }
      ]
    },
    {
      "property": "Type_of_contact",
      "dataitem": [
        {
          "type": 2,
          "item": "Model developer"
        }
      ]
    },
    {
      "property": "Visualization_software_needed",
      "dataitem": [
        {
          "type": 4,
          "item": "f"
        }
      ]
    },
    {
      "property": "_ASK",
      "dataitem": [
        {
          "type": 9,
          "item": "ChannelProfiler#3002##_QUERY884cdb3679214376cb9139a791637756"
        },
        {
          "type": 9,
          "item": "ChannelProfiler#3002##_QUERYfae7b31ba760a58140f9a6aac4a6edd5"
        },
        {
          "type": 9,
          "item": "ChannelProfiler#3002##_QUERY3be1318fda3bf14da1e4962a65a5c125"
        }
      ]
    },
    {
      "property": "_CDAT",
      "dataitem": [
        {
          "type": 6,
          "item": "1/2020/1/28/15/49/23/0"
        }
      ]
    },
    {
      "property": "_ERRC",
      "dataitem": [
        {
          "type": 9,
          "item": "ChannelProfiler#3002##_ERRe276a1ffb0e020a1257eff82199d1d33"
        },
        {
          "type": 9,
          "item": "ChannelProfiler#3002##_ERRf1d465c2abf4947336e4674ceaa22c37"
        },
        {
          "type": 9,
          "item": "ChannelProfiler#3002##_ERR604147abdb14669b9c8f3104544da08b"
        },
        {
          "type": 9,
          "item": "ChannelProfiler#3002##_ERRde9fdd962ce63dcda24f603326a2771d"
        }
      ]
    },
    {
      "property": "_INST",
      "dataitem": [
        {
          "type": 9,
          "item": "Pages_using_duplicate_arguments_in_template_calls#14##"
        },
        {
          "type": 9,
          "item": "Models#14##"
        }
      ]
    },
    {
      "property": "_LEDT",
      "dataitem": [
        {
          "type": 9,
          "item": "WikiSysop#2##"
        }
      ]
    },
    {
      "property": "_MDAT",
      "dataitem": [
        {
          "type": 6,
          "item": "1/2020/9/17/2/14/6/0"
        }
      ]
    },
    {
      "property": "_SKEY",
      "dataitem": [
        {
          "type": 2,
          "item": "ChannelProfiler"
        }
      ]
    }
  ],
  "sobj": [
    {
      "subject": "ChannelProfiler#3002##_QUERY884cdb3679214376cb9139a791637756",
      "data": [
        {
          "property": "_ASKDE",
          "dataitem": [
            {
              "type": 1,
              "item": "0"
            }
          ]
        },
        {
          "property": "_ASKFO",
          "dataitem": [
            {
              "type": 2,
              "item": "plainlist"
            }
          ]
        },
        {
          "property": "_ASKSI",
          "dataitem": [
            {
              "type": 1,
              "item": "1"
            }
          ]
        },
        {
          "property": "_ASKST",
          "dataitem": [
            {
              "type": 2,
              "item": "[[:Model:ChannelProfiler]]"
            }
          ]
        },
        {
          "property": "_SKEY",
          "dataitem": [
            {
              "type": 2,
              "item": "ChannelProfiler# QUERY884cdb3679214376cb9139a791637756"
            }
          ]
        }
      ]
    },
    {
      "subject": "ChannelProfiler#3002##_QUERYfae7b31ba760a58140f9a6aac4a6edd5",
      "data": [
        {
          "property": "_ASKDE",
          "dataitem": [
            {
              "type": 1,
              "item": "1"
            }
          ]
        },
        {
          "property": "_ASKFO",
          "dataitem": [
            {
              "type": 2,
              "item": "plainlist"
            }
          ]
        },
        {
          "property": "_ASKSI",
          "dataitem": [
            {
              "type": 1,
              "item": "5"
            }
          ]
        },
        {
          "property": "_ASKST",
          "dataitem": [
            {
              "type": 2,
              "item": "[[User:+]] [[First name member::Katy]] [[Last name member::Barnhart]]"
            }
          ]
        },
        {
          "property": "_SKEY",
          "dataitem": [
            {
              "type": 2,
              "item": "ChannelProfiler# QUERYfae7b31ba760a58140f9a6aac4a6edd5"
            }
          ]
        }
      ]
    },
    {
      "subject": "ChannelProfiler#3002##_QUERY3be1318fda3bf14da1e4962a65a5c125",
      "data": [
        {
          "property": "_ASKDE",
          "dataitem": [
            {
              "type": 1,
              "item": "1"
            }
          ]
        },
        {
          "property": "_ASKFO",
          "dataitem": [
            {
              "type": 2,
              "item": "ul"
            }
          ]
        },
        {
          "property": "_ASKSI",
          "dataitem": [
            {
              "type": 1,
              "item": "5"
            }
          ]
        },
        {
          "property": "_ASKST",
          "dataitem": [
            {
              "type": 2,
              "item": "[[Model:+]] [[First name::Katy]] [[Last name::Barnhart]]"
            }
          ]
        },
        {
          "property": "_SKEY",
          "dataitem": [
            {
              "type": 2,
              "item": "ChannelProfiler# QUERY3be1318fda3bf14da1e4962a65a5c125"
            }
          ]
        }
      ]
    },
    {
      "subject": "ChannelProfiler#3002##_ERRe276a1ffb0e020a1257eff82199d1d33",
      "data": [
        {
          "property": "_ERRP",
          "dataitem": [
            {
              "type": 9,
              "item": "Code_openmi_compliant_or_not#102##"
            }
          ]
        },
        {
          "property": "_ERRT",
          "dataitem": [
            {
              "type": 2,
              "item": "[8,\"smw-constraint-error-allows-value-list\",\"Not yet\",\"Yes, No but planned, No but possible, No not possible\",\"Code openmi compliant or not\"]"
            }
          ]
        },
        {
          "property": "_SKEY",
          "dataitem": [
            {
              "type": 2,
              "item": "ChannelProfiler# ERRe276a1ffb0e020a1257eff82199d1d33"
            }
          ]
        }
      ]
    },
    {
      "subject": "ChannelProfiler#3002##_ERRf1d465c2abf4947336e4674ceaa22c37",
      "data": [
        {
          "property": "_ERRP",
          "dataitem": [
            {
              "type": 9,
              "item": "Code_IRF_or_not#102##"
            }
          ]
        },
        {
          "property": "_ERRT",
          "dataitem": [
            {
              "type": 2,
              "item": "[8,\"smw-constraint-error-allows-value-list\",\"Not yet\",\"Yes, No but planned, No but possible, No not possible\",\"Code IRF or not\"]"
            }
          ]
        },
        {
          "property": "_SKEY",
          "dataitem": [
            {
              "type": 2,
              "item": "ChannelProfiler# ERRf1d465c2abf4947336e4674ceaa22c37"
            }
          ]
        }
      ]
    },
    {
      "subject": "ChannelProfiler#3002##_ERR604147abdb14669b9c8f3104544da08b",
      "data": [
        {
          "property": "_ERRP",
          "dataitem": [
            {
              "type": 9,
              "item": "Code_CMT_compliant_or_not#102##"
            }
          ]
        },
        {
          "property": "_ERRT",
          "dataitem": [
            {
              "type": 2,
              "item": "[8,\"smw-constraint-error-allows-value-list\",\"Not yet\",\"Yes, In progress, No but possible, No not possible\",\"Code CMT compliant or not\"]"
            }
          ]
        },
        {
          "property": "_SKEY",
          "dataitem": [
            {
              "type": 2,
              "item": "ChannelProfiler# ERR604147abdb14669b9c8f3104544da08b"
            }
          ]
        }
      ]
    },
    {
      "subject": "ChannelProfiler#3002##_ERRde9fdd962ce63dcda24f603326a2771d",
      "data": [
        {
          "property": "_ERRP",
          "dataitem": [
            {
              "type": 9,
              "item": "Code_PyMT_compliant_or_not#102##"
            }
          ]
        },
        {
          "property": "_ERRT",
          "dataitem": [
            {
              "type": 2,
              "item": "[8,\"smw-constraint-error-allows-value-list\",\"Not yet\",\"Yes, In progress, No but possible, No not possible\",\"Code PyMT compliant or not\"]"
            }
          ]
        },
        {
          "property": "_SKEY",
          "dataitem": [
            {
              "type": 2,
              "item": "ChannelProfiler# ERRde9fdd962ce63dcda24f603326a2771d"
            }
          ]
        }
      ]
    }
  ],
  "serializer": "SMW\\Serializers\\SemanticDataSerializer",
  "version": 2
}